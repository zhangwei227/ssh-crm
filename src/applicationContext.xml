<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 读取db.properties文件 -->
    <context:property-placeholder location="classpath:db.properties" />

    <!-- 配置c3p0连接池 -->
    <bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}" />
        <property name="driverClass" value="${jdbc.driverClass}" />
        <property name="user" value="${jdbc.user}" />
        <property name="password" value="${jdbc.password}" />
    </bean>
    
    <!-- 核心事物管理器 -->
    <bean name="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <!-- 配置通知 -->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
            <tx:method name="persist*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
            <tx:method name="update*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
            <tx:method name="modify*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
            <tx:method name="delete*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
            <tx:method name="remove*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
            <tx:method name="get*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true" />
            <tx:method name="find*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true" />
        </tx:attributes>
    </tx:advice>

    &lt;!&ndash; 配置将通知织入目标对象 &ndash;&gt;
    <aop:config>
        &lt;!&ndash; 配置切点 &ndash;&gt;
        <aop:pointcut id="txPc" expression="execution(* com.wei.service.impl.*ServiceImpl.*(..))"/>
        &lt;!&ndash; 配置切面 &ndash;&gt;
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPc"/>
    </aop:config>-->

    <!-- 开启注解事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 将sessionFactory配置到spring容器中 -->
    <!-- 加载配置方案1:仍然使用外部的hibernate.cfg.xml配置信息 -->
    <!--<bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="configLocation" value="classpath:hibernate.cfg.xml.bak"/>
    </bean>-->
    <!-- 加载配置方案2:在spring配置中放置hibernate配置信息-->
    <bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!-- 将连接池注入到sessionFactory, hibernate会通过连接池获得连接 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置hibernate基本信息 -->
        <property name="hibernateProperties" >
            <props>
                <!-- 必选配置 -->
                <!--<prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>-->
                <!--<prop key="hibernate.connection.url">jdbc:mysql://192.168.1.102/crm</prop>-->
                <!--<prop key="hibernate.connection.username">root</prop>-->
                <!--<prop key="hibernate.connection.password">root</prop>-->
                <!--<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>-->
                <!-- 可选配置 -->
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
        <!-- 引入orm元数据 -->
        <property name="mappingDirectoryLocations" value="classpath:com/wei/domain" />
    </bean>


    <!--action配置-->
    <!-- 注意:action对象租用范围一定是多例的,这样才符合struts2架构 -->
    <bean name="userAction" class="com.wei.web.action.UserAction" scope="prototype">
        <property name="userService" ref="userService"/>
    </bean>

    <!--service配置-->
    <bean name="userService" class="com.wei.service.impl.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
    </bean>

    <!-- dao -->
    <bean name="userDao" class="com.wei.dao.impl.UserDaoImpl">
        <!-- 注入sessionFactory -->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

</beans>